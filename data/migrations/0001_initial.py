# Generated by Django 3.2rc1 on 2021-04-30 04:18

import data.models.task
import data.storage_backends
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AuxilioEmergencial',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ano_disponibilizacao', models.PositiveIntegerField(verbose_name='ANO')),
                ('mes_disponibilizacao', models.PositiveIntegerField(verbose_name='MÊS')),
                ('nis_beneficiario', models.BigIntegerField(blank=True, null=True, verbose_name='NIS BENEFICIÁRIO')),
                ('cpf_beneficiario', models.CharField(blank=True, max_length=20, null=True, verbose_name='CPF BENEFICIÁRIO')),
                ('nome_beneficiario', models.CharField(blank=True, max_length=250, null=True, verbose_name='NOME BENEFICIÁRIO')),
                ('nis_responsavel', models.BigIntegerField(blank=True, null=True, verbose_name='NIS RESPONSÁVEL')),
                ('cpf_responsavel', models.CharField(blank=True, max_length=20, null=True, verbose_name='CPF RESPONSÁVEL')),
                ('nome_responsavel', models.CharField(blank=True, max_length=250, null=True, verbose_name='NOME RESPONSÁVEL')),
                ('parcela', models.PositiveIntegerField(blank=True, null=True, verbose_name='PARCELA')),
                ('observacao', models.TextField(blank=True, null=True, verbose_name='OBSERVACAO')),
                ('valor_beneficio', models.FloatField(verbose_name='VALOR BENEFÍCIO')),
            ],
            options={
                'verbose_name': 'Auxílio Emergêncial',
                'verbose_name_plural': 'Auxílio Emergêncial',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='AuxilioEmergencialEnquadramento',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tipo', models.CharField(blank=True, max_length=255, null=True, verbose_name='TIPO')),
            ],
            options={
                'verbose_name': 'Auxílio Emergêncial - Enquadramento',
                'verbose_name_plural': 'Auxílio Emergêncial - Enquadramentos',
            },
        ),
        migrations.CreateModel(
            name='AuxilioEmergencialMunicipio',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo_municipio', models.PositiveIntegerField(blank=True, null=True, verbose_name='CÓDIGO MUNICÍPIO')),
                ('nome_municipio', models.CharField(blank=True, max_length=255, null=True, verbose_name='NOME MUNICÍPIO')),
            ],
            options={
                'verbose_name': 'Auxílio Emergêncial - Município',
                'verbose_name_plural': 'Auxílio Emergêncial - Municípios',
            },
        ),
        migrations.CreateModel(
            name='AuxilioEmergencialUnidadeFederativa',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sigla', models.CharField(blank=True, max_length=2, null=True, verbose_name='Sigla')),
            ],
            options={
                'verbose_name': 'Auxílio Emergêncial - Unidade Federativa',
                'verbose_name_plural': 'Auxílio Emergêncial - Unidades Federativas',
            },
        ),
        migrations.CreateModel(
            name='CotacoesHistoricasB3',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tipreg', models.IntegerField(verbose_name='TIPO DE REGISTRO')),
                ('datpre', models.DateField(verbose_name='DATA DO PREGÃO')),
                ('codbdi', models.IntegerField(verbose_name='CÓDIGO BDI')),
                ('codneg', models.CharField(max_length=12, verbose_name='CÓDIGO DE NEGOCIAÇÃO DO PAPEL')),
                ('tpmerc', models.IntegerField(verbose_name='TIPO DE MERCADO')),
                ('nomres', models.CharField(blank=True, max_length=12, null=True, verbose_name='NOME RESUMIDO DA EMPRESA EMISSORA DO PAPEL')),
                ('especi', models.CharField(max_length=10, verbose_name='ESPECIFICAÇÃO DO PAPEL')),
                ('prazot', models.IntegerField(null=True, verbose_name='PRAZO EM DIAS DO MERCADO A TERMO')),
                ('modref', models.CharField(max_length=4, verbose_name='MOEDA DE REFERÊNCIA')),
                ('preabe', models.FloatField(verbose_name='PREÇO DE ABERTURA  DO PAPEL')),
                ('premax', models.FloatField(verbose_name='PREÇO DE MÁXIMO  DO PAPEL')),
                ('premin', models.FloatField(verbose_name='PREÇO MÍNIMO  DO PAPEL')),
                ('premed', models.FloatField(verbose_name='PREÇO MÉDIO DO PAPEL')),
                ('preult', models.FloatField(verbose_name='PREÇO DO ÚLTIMO NEGÓCIO DO PAPEL-MERCADO NO PREGÃO')),
                ('preofc', models.FloatField(verbose_name='PREÇO DA MELHOR OFERTA DE COMPRA')),
                ('preofv', models.FloatField(verbose_name='PREÇO DA MELHOR OFERTA DE VENDA')),
                ('totneg', models.CharField(max_length=5, verbose_name='NEG. NÚMERO DE NEGÓCIOS EFETUADOS COM O PAPEL')),
                ('quatot', models.BigIntegerField(verbose_name='QUANTIDADE TOTAL DE TÍTULOS NEGOCIADOS NESTE PAPEL')),
                ('voltot', models.BigIntegerField(verbose_name='VOLUME TOTAL DE TÍTULOS NEGOCIADOS NESTE PAPEL')),
                ('preexe', models.BigIntegerField(verbose_name='PREÇO DE EXERCÍCIOS PARA O MERCADO DE OPÇÕES')),
                ('indopc', models.IntegerField(verbose_name='INDICADOR DE CORREÇÃO DE PREÇOS')),
                ('datven', models.DateField(verbose_name='DATA DO VENCIMENTO PARA OS MERCADOS')),
                ('fatcot', models.BigIntegerField(verbose_name='FATOR DE COTAÇÃO DO PAPEL')),
                ('ptoexe', models.BigIntegerField(verbose_name='PREÇO DE EXERCÍCIO EM PONTOS PARA OPÇÕES REFERENCIADAS EM DÓLAR OU VALOR DE CONTRATO EM PONTOS PARA TERMO SECUNDÁRIO')),
                ('codisi', models.CharField(max_length=1, verbose_name='CÓDIGO DO PAPEL NO SISTEMA ISIN OU CÓDIGO INTERNO DO PAPEL')),
                ('dismes', models.IntegerField(verbose_name='NÚMERO DE DISTRIBUIÇÃO DO PAPEL')),
            ],
            options={
                'verbose_name': 'Cotações Históricas - B3',
                'verbose_name_plural': 'Cotações Históricas - B3',
            },
        ),
        migrations.CreateModel(
            name='CotasParlamentares',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('numero_documento', models.CharField(blank=True, max_length=255, null=True, verbose_name='Número do Documeto')),
                ('tipo_documento', models.PositiveIntegerField(blank=True, choices=[(0, 'Nota Fiscal'), (1, 'Recibo'), (2, 'Despesa no Exterior')], null=True, verbose_name='Tipo do Documento')),
                ('parcela_documento', models.PositiveIntegerField(blank=True, null=True, verbose_name='Número da Parcela do Documento')),
                ('data_emissao', models.DateTimeField(blank=True, null=True, verbose_name='Data de Emissão do Documento')),
                ('valor_documento', models.FloatField(blank=True, null=True, verbose_name='Valor do Documento')),
                ('valor_glosa', models.FloatField(blank=True, null=True, verbose_name='vlrGlosa')),
                ('valor_liquido_documento', models.FloatField(blank=True, null=True, verbose_name='Valor Líquido do Documento')),
                ('id_documento', models.PositiveIntegerField(blank=True, null=True, verbose_name='Id do Documento')),
                ('url_documento', models.URLField(blank=True, null=True, verbose_name='URL do Documento')),
                ('mes_documento', models.PositiveIntegerField(blank=True, null=True, verbose_name='Mês do Documento')),
                ('ano_documento', models.PositiveIntegerField(blank=True, null=True, verbose_name='Ano do Documento')),
                ('numero_lote', models.PositiveIntegerField(blank=True, null=True, verbose_name='Número do Lote')),
                ('numero_ressarcimento', models.PositiveIntegerField(blank=True, null=True, verbose_name='Número do Ressarcimento')),
                ('valor_restituicao', models.FloatField(blank=True, null=True, verbose_name='Valor da Restituição')),
                ('identificar_solicitante', models.PositiveIntegerField(blank=True, null=True, verbose_name='Identificador do Solicitante')),
            ],
            options={
                'verbose_name': 'Cota Parlamentar - Cota',
                'verbose_name_plural': 'Cotas Parlamentares - Cotas',
                'ordering': ['-data_emissao'],
            },
        ),
        migrations.CreateModel(
            name='CotasParlamentaresFornecedor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(blank=True, max_length=255, null=True, verbose_name='Nome')),
                ('cnpj_cpf', models.CharField(blank=True, max_length=255, null=True, verbose_name='CNPJ/CPF')),
            ],
            options={
                'verbose_name': 'Cota Parlamentar - Fornecedor',
                'verbose_name_plural': 'Cotas Parlamentares - Fornecedores',
            },
        ),
        migrations.CreateModel(
            name='CotasParlamentaresLegislatura',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('numero', models.IntegerField(blank=True, null=True, verbose_name='Número')),
                ('codigo', models.IntegerField(blank=True, null=True, verbose_name='Código')),
            ],
            options={
                'verbose_name': 'Cota Parlamentar - Legislatura',
                'verbose_name_plural': 'Cotas Parlamentares - Legislaturas',
            },
        ),
        migrations.CreateModel(
            name='CotasParlamentaresParlamentar',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(blank=True, max_length=255, null=True, verbose_name='Nome do Parlamentar')),
                ('cpf', models.BigIntegerField(blank=True, null=True, verbose_name='CPF do Parlamentar')),
                ('id_cadastro', models.IntegerField(blank=True, null=True, verbose_name='Identificador Único do Parlamentar')),
                ('numero_carteira_parlamentar', models.IntegerField(blank=True, null=True, verbose_name='Número da Carteira Parlamentar')),
            ],
            options={
                'verbose_name': 'Cota Parlamentar - Parlamentar',
                'verbose_name_plural': 'Cotas Parlamentares - Parlamentares',
                'ordering': ['nome'],
            },
        ),
        migrations.CreateModel(
            name='CotasParlamentaresPartido',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sigla', models.CharField(blank=True, max_length=255, null=True, verbose_name='SIGLA')),
            ],
            options={
                'verbose_name': 'Cota Parlamentar - Partido',
                'verbose_name_plural': 'Cotas Parlamentares - Partidos',
            },
        ),
        migrations.CreateModel(
            name='CotasParlamentaresPassageiro',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(blank=True, max_length=255, null=True, verbose_name='Nome')),
            ],
            options={
                'verbose_name': 'Cota Parlamentar - Passageiro',
                'verbose_name_plural': 'Cotas Parlamentares - Passageiros',
            },
        ),
        migrations.CreateModel(
            name='CotasParlamentaresTipoDespesa',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('numero', models.IntegerField(blank=True, null=True, verbose_name='Número')),
                ('descricao', models.CharField(blank=True, max_length=255, null=True, verbose_name='Descrição')),
                ('numero_especificacao', models.IntegerField(blank=True, null=True, verbose_name='Número da Especificação')),
                ('descricao_especificacao', models.CharField(blank=True, max_length=255, null=True, verbose_name='Descrição da Especificaçã')),
            ],
            options={
                'verbose_name': 'Cota Parlamentar - Tipo de Despesa',
                'verbose_name_plural': 'Cotas Parlamentares - Tipo de Despesa',
            },
        ),
        migrations.CreateModel(
            name='CotasParlamentaresTrecho',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('trecho', models.CharField(blank=True, max_length=255, null=True, verbose_name='Trecho')),
            ],
            options={
                'verbose_name': 'Cota Parlamentar - Trecho',
                'verbose_name_plural': 'Cotas Parlamentares - Trechos',
            },
        ),
        migrations.CreateModel(
            name='CotasParlamentaresUnidadeFederativa',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sigla', models.CharField(blank=True, max_length=2, null=True, verbose_name='Sigla')),
            ],
            options={
                'verbose_name': 'Cota Parlamentar - Unidade Federativa',
                'verbose_name_plural': 'Cotas Parlamentares - Unidades Federativas',
            },
        ),
        migrations.CreateModel(
            name='Task',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dataset', models.CharField(choices=[('AUXILIO_EMERGENCIAL', 'Auxílio Emergêncial'), ('COTAS_PARLAMENTARES', 'Cotas Parlamentares'), ('COTACOES_HISTORICAS_B3', 'Cotações Históricas B3')], max_length=40, verbose_name='Dataset')),
                ('source', models.FileField(blank=True, null=True, storage=data.storage_backends.PrivateMediaStorage(), upload_to=data.models.task.get_file_path, verbose_name='Source')),
                ('source_date', models.DateTimeField(blank=True, null=True, verbose_name='Source date')),
                ('source_format', models.CharField(blank=True, choices=[('CSV', 'CSV'), ('GPKG', 'GPKG'), ('ZIP', 'ZIP'), ('RAR', 'RAR')], max_length=20, null=True, verbose_name='Source format')),
                ('status', models.CharField(choices=[('READY', 'Ready'), ('RUNNING', 'Running'), ('COMPLETED', 'Completed'), ('FAILED', 'Failed'), ('CANCELLED', 'Cancelled')], default='READY', max_length=40, verbose_name='Status')),
                ('details', models.TextField(blank=True, null=True, verbose_name='Details')),
                ('creation_date', models.DateTimeField(auto_now_add=True, verbose_name='Creation date')),
                ('last_modification_date', models.DateTimeField(auto_now=True, verbose_name='Last modification date')),
            ],
            options={
                'verbose_name': 'Task',
                'verbose_name_plural': 'Tasks',
                'ordering': ['-creation_date'],
            },
        ),
        migrations.AddIndex(
            model_name='task',
            index=models.Index(fields=['dataset'], name='data_task_dataset_8f96f7_idx'),
        ),
        migrations.AddIndex(
            model_name='task',
            index=models.Index(fields=['source_date'], name='data_task_source__ea0fee_idx'),
        ),
        migrations.AddIndex(
            model_name='task',
            index=models.Index(fields=['status'], name='data_task_status_ab742f_idx'),
        ),
        migrations.AddField(
            model_name='cotasparlamentares',
            name='fornecedor',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='data.cotasparlamentaresfornecedor', verbose_name='Fornecedor'),
        ),
        migrations.AddField(
            model_name='cotasparlamentares',
            name='legislatura',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='data.cotasparlamentareslegislatura', verbose_name='Legislatura'),
        ),
        migrations.AddField(
            model_name='cotasparlamentares',
            name='parlamentar',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='data.cotasparlamentaresparlamentar', verbose_name='Parlamentar'),
        ),
        migrations.AddField(
            model_name='cotasparlamentares',
            name='partido',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='data.cotasparlamentarespartido', verbose_name='Partido'),
        ),
        migrations.AddField(
            model_name='cotasparlamentares',
            name='passageiro',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='data.cotasparlamentarespassageiro', verbose_name='Passageiro'),
        ),
        migrations.AddField(
            model_name='cotasparlamentares',
            name='task',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cotas_parlamentares', to='data.task', verbose_name='Task'),
        ),
        migrations.AddField(
            model_name='cotasparlamentares',
            name='tipo_despesa',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='data.cotasparlamentarestipodespesa', verbose_name='Tipo de Despesa'),
        ),
        migrations.AddField(
            model_name='cotasparlamentares',
            name='trecho',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='data.cotasparlamentarestrecho', verbose_name='trecho'),
        ),
        migrations.AddField(
            model_name='cotasparlamentares',
            name='unidade_federativa',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='data.cotasparlamentaresunidadefederativa', verbose_name='Unidade Federativa'),
        ),
        migrations.AddField(
            model_name='auxilioemergencial',
            name='enquadramento',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='data.auxilioemergencialenquadramento', verbose_name='ENQUADRAMENTO'),
        ),
        migrations.AddField(
            model_name='auxilioemergencial',
            name='municipio',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='data.auxilioemergencialmunicipio', verbose_name='Município'),
        ),
        migrations.AddField(
            model_name='auxilioemergencial',
            name='task',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='auxilio_emergencial', to='data.task', verbose_name='Task'),
        ),
        migrations.AddField(
            model_name='auxilioemergencial',
            name='unidade_federativa',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='data.auxilioemergencialunidadefederativa', verbose_name='Unidade Federativa'),
        ),
    ]
